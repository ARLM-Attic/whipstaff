<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dhgms.Nucleotide</name>
    </assembly>
    <members>
        <member name="T:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers">
            <summary>
            Generator for ADO.NET helpers
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.Generate(System.String,System.String,System.Collections.Generic.List{Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters})">
            <summary>
            Entry point for generating the code
            </summary>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="classes">
            Collection of classes to generate a helper for
            </param>
            <returns>
            C# code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoGetOrdinals(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            The do get ordinals.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoGetDataColumnsMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters)">
            <summary>
            The do get data columns method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="classInfo">
            The class Info.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoViewFilterGetRowData(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the code that gets the row data for reading a data reader into a strongly typed class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoDifferenceGetRowData(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the code that gets the row data for reading a data reader into a strongly typed class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoInformationClassGetRowData(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the code that gets the row data for reading a data reader into a strongly typed class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoGetStronglyTypedObjectFromDataReaderRowMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters,System.Action{System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[]},System.String)">
            <summary>
            The do get strongly typed object from data reader row method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="classInfo">
            The class Info.
            </param>
            <param name="doGetRowDataMethod">
            The do Get Row Data Method.
            </param>
            <param name="classSuffix">
            class suffix (used for difference class, etc.)
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.AdoNetHelpers.DoOurMethodsRegion(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters})">
            <summary>
            Generates the code for the our methods region
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="classes">
            Collection of classes to generate helpers for
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator">
            <summary>
                Base Class for Code Generated Classes
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator"/> class.
                Constructor
            </summary>
            <param name="defaultBaseNamespace">
            The default namespace for the base class of the class being generated
            </param>
            <param name="classTypeName">
            The type of class being produced (i.e. info, difference, viewfilter, searchfilter
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.Generate(Dhgms.Nucleotide.Model.Info.ClassGenerationParameters)">
            <summary>
            Entry point for generating the code
            </summary>
            <returns>
            C# code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.GetUsingNamespaces">
            <summary>
            Gets a collection of namespaces used by the code.
            </summary>
            <returns>Collection of namespaces</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoConstructorParamComments(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the comments for the parameters of the constructor
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoGetHeaderRecordMethod(System.Text.StringBuilder,System.Collections.Generic.IList{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.Collections.Generic.ICollection{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            The do get header record method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoClassSpecificMethods(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Produces code for class specific methods
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoConstructorMethod(System.Text.StringBuilder,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            The do constructor method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoConstructorParameters(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the parameters for the constructor
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoDisposeMethod(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.String)">
            <summary>
            Generates code for the OnDispose event
            </summary>
            <param name="sb">
            string builder to add the code to
            </param>
            <param name="properties">
            list of properties belonging to the class
            </param>
            <param name="baseClassName">
            the name of the base class, if different from normal
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoDoXmlElementMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the DoXmlElement method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoFieldsRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Fields Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoGetHashCodeMethod(System.Text.StringBuilder,System.Collections.Generic.IList{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.Collections.Generic.ICollection{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            The do get hash code method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoIComparableRegion(System.Text.StringBuilder,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the methods required by the IComparable interface
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="className">
            Name of the class
            </param>
            <param name="properties">
            Collection of properties in the class
            </param>
            <param name="baseClassName">
            Base class name, if not using the default
            </param>
            <param name="baseClassProperties">
            Properties in the base class, if any
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoOdataVocabulariesMethod(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates OData method for an information class
            </summary>
            <remarks>
            based upon http://blogs.msdn.com/b/astoriateam/archive/2011/10/13/vocabularies-in-wcf-data-services.aspx
            </remarks>
            <param name="sb">
            String builder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace the class sits in
            </param>
            <param name="subNamespace">
            The sub namespace the class sits in
            </param>
            <param name="className">
            The name of the class
            </param>
            <param name="properties">
            Collection of properties for the class
            </param>
            <param name="baseClassProperties">
            Collection of properties for the base case, if any.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoPropertiesRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Properties Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoToStringArrayMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            The do to string array method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.GetClassSuffix">
            <summary>
                Gets the class suffix
            </summary>
            <returns>
                the class suffix
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.GetConstructorParameterType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type to be used for a parameter in the constructor
            </summary>
            <param name="propertyInfo">
            the property
            </param>
            <returns>
            the constructor parameter type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.GetPropertyType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type for a property
            </summary>
            <param name="pi">
            The property to generate a type for
            </param>
            <returns>
            .NET data type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.GetValueForToStringArray(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the value of the property when converting to a string array.
            </summary>
            <param name="pi">
            property information
            </param>
            <returns>
            the value of the property when converting to a string array
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.OnDoClassSpecificProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Does any class specific properties. For example the count property on the difference class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.OnDoCompareToProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.Boolean)">
            <summary>
            Generates the code for comparing properties in the CompareTo method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="properties">
            The properties to generate code for
            </param>
            <param name="baseClassProperties">
            Properties in the base class, if any
            </param>
            <param name="checkResultDeclared">
            Whether the check result variable has been declared yet
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.OnDoFieldItem(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the field code for a property member
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate a field for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.OnDoPropertyMutator(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the setter for the property
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate the setter for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoTableValidation(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.Collections.Generic.ICollection{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            The do table validation.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DoOurMethodsRegion(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the code for the our methods region
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.ClassTypeName">
            <summary>
            Gets the type of class being produced (i.e. info, difference, view filter, search filter)
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Helper.BaseClassGenerator.DefaultBaseNamespace">
            <summary>
                Gets the default namespace for the base class of the class being generated
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.Common">
            <summary>
            Common helper methods for code generation
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Helper.Common.LazyRandomizer">
            <summary>
            The lazy randomizer.
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetAutoGeneratedWarning">
            <summary>
            Generates a comment warning of modifying the generated file
            </summary>
            <returns>
            C# comment
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetClassFieldName(System.String)">
            <summary>
            Makes sure the first letter of the property name is upper case
            </summary>
            <param name="name">
            property name to check
            </param>
            <returns>
            cased property name
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetClassHeader(System.String)">
            <summary>
            Generates the class header.
            Largely redundant, here because the C++ used it and because there are options to use it for sealing C# classes in future
            </summary>
            <param name="className">
            The name of the class
            </param>
            <returns>
            The get class header.
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetIEquatableRegion(System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            generates the IEquatable methods for an information class
            </summary>
            <param name="className">
            name of the class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
            <returns>
            C# Code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetTabs(System.Int32)">
            <summary>
            Generates the tabs at the beginning of a line
            </summary>
            <param name="tabs">
            number of tabs
            </param>
            <returns>
            string of tabs
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetVariableName(System.String)">
            <summary>
            Ensures the first letter of a property name is lower case for a variable
            </summary>
            <param name="name">
            Property Name to Convert
            </param>
            <returns>
            Cased variable name
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Common.GetRandomString(System.Int32)">
            <summary>
            Generate a random string.
            </summary>
            <param name="size">The length of the string.</param>
            <returns>A random string</returns>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.Configuration">
            <summary>
            Class for handling configuration class generation
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Configuration.Generate(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.ConfigurationProperty})">
            <summary>
            Entry point for generating the code
            </summary>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="classRemarks">
            Remarks for the class
            </param>
            <param name="properties">
            Properties of the configuration class
            </param>
            <returns>
            C# code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Configuration.DoConfigurationProperty(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.ConfigurationProperty)">
            <summary>
            Generates the code for a configuration property
            </summary>
            <param name="sb">
            The string builder to add the code to
            </param>
            <param name="property">
            The property.
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.Difference">
            <summary>
            Helper class for generating a difference class
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Helper.Difference"/> class. 
            Constructor
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.GetClassSuffix">
            <summary>
            Gets the class suffix
            </summary>
            <returns>the class suffix</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.GetUsingNamespaces">
            <summary>
            Gets a collection of namespaces used by the code.
            </summary>
            <returns>Collection of namespaces</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.DoClassSpecificMethods(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Produces code for class specific methods
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.DoFieldsRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Fields Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.DoPropertiesRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Properties Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.GetConstructorParameterType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type to be used for a parameter in the constructor
            </summary>
            <param name="propertyInfo">
            the property
            </param>
            <returns>
            The parameter type used in a constructor
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.GetPropertyType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type for a property
            </summary>
            <param name="pi">
            The property to generate a type for
            </param>
            <returns>
            .NET data type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.GetValueForToStringArray(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the value of the property when converting to a string array.
            </summary>
            <param name="pi">
            property information
            </param>
            <returns>
            the value of the property when converting to a string array
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.OnDoClassSpecificProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Does any class specific properties. For example the count property on the difference class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.OnDoCompareToProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.Boolean)">
            <summary>
            Generates the code for comparing properties in the CompareTo method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="properties">
            The property to generate code for
            </param>
            <param name="baseClassProperties">
            Properties in the base class, if any
            </param>
            <param name="checkResultDeclared">
            Whether the check result variable has been declared yet
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.OnDoFieldItem(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the field code for a property member
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate a field for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.OnDoPropertyMutator(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the mutator for the property
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate the mutator for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.DoDisposeMethod(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.String)">
            <summary>
            Generates code for the OnDispose event
            </summary>
            <param name="sb">string builder to add the code to</param>
            <param name="properties">list of properties belonging to the class</param>
            <param name="baseClassName">the name of the base class, if different from normal</param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.OnGetColumnNamesMethod(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.String,System.Collections.Generic.ICollection{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            Does the GetColumnNames method
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Difference.DoGetHashCodeMethod(System.Text.StringBuilder,System.Collections.Generic.IList{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.Collections.Generic.ICollection{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            The do get hash code method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.EntityFrameworkHelpers">
            <summary>
                Helper for generating the Entity Framework helpers
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.EntityFrameworkHelpers.Generate(System.String,System.String,System.Collections.Generic.List{System.Tuple{Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters,System.String}})">
            <summary>
            Entry point for generating the code
            </summary>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="classes">
            Collection of classes to generate a helper for
            </param>
            <returns>
            C# code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.EntityFrameworkHelpers.DoEntityFrameworkModelMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters,System.String)">
            <summary>
            Generates the code that maps the class to a database table t
            </summary>
            <param name="sb">
                The string builder to add the code to
            </param>
            <param name="classInfo">
                The information relating to the generation of the class
            </param>
            <param name="inheritingFullyQualifiedClass">
            The fully qualified class name for the EF inheriting class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.EntityFrameworkHelpers.DoOurMethodsRegion(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Tuple{Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters,System.String}})">
            <summary>
            Generates the code for the our methods region
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="classes">
            Collection of classes to generate helpers for
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.Information">
            <summary>
            Helper for generating an information class
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Helper.Information"/> class. 
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.GetUsingNamespaces">
            <summary>
            Gets a collection of namespaces used by the code.
            </summary>
            <returns>Collection of namespaces</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.DoClassSpecificMethods(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Produces code for class specific methods
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.GetClassSuffix">
            <summary>
            Gets the class suffix
            </summary>
            <returns>
            the class suffix
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.GetConstructorParameterType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type to be used for a parameter in the constructor
            </summary>
            <param name="propertyInfo">
            the property
            </param>
            <returns>
            the constructor parameter type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.GetPropertyType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type for a property
            </summary>
            <param name="pi">
            The property to generate a type for
            </param>
            <returns>
            .NET data type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.GetValueForToStringArray(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the value of the property when converting to a string array.
            </summary>
            <param name="pi">
            property information
            </param>
            <returns>
            the value of the property when converting to a string array
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.OnDoClassSpecificProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Does any class specific properties. For example the count property on the difference class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.OnDoCompareToProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.Boolean)">
            <summary>
            Generates the code for comparing properties in the CompareTo method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="properties">
            The property to generate code for
            </param>
            <param name="baseClassProperties">
            Properties in the base class, if any
            </param>
            <param name="checkResultDeclared">
            Whether the check result variable has been declared yet
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.OnDoFieldItem(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the field code for a property member
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate a field for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.OnDoPropertyMutator(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the setter for the property
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate the setter for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.Information.DoGetDifferencesMethod(System.Text.StringBuilder,System.String,System.String,System.String,System.Collections.Generic.IList{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.Collections.Generic.IList{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            Generates the GetDifferences method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.ProviderProxy">
            <summary>
            Helper for generating provider proxy classes
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ProviderProxy.Generate(System.String,Dhgms.Nucleotide.Model.Info.ProviderProxy[])">
            <summary>
            Entry point that generates the code
            </summary>
            <param name="projectName">
            The project this provider proxy belongs to. This is used as the root namespace
            </param>
            <param name="objectNames">
            collection of provider proxies
            </param>
            <returns>
            The C# code
            </returns>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.SearchFilter">
            <summary>
            Helper class for generating a search filter
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Helper.SearchFilter"/> class. 
            Constructor
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.GetClassSuffix">
            <summary>
            Gets the class suffix
            </summary>
            <returns>the class suffix</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.GetUsingNamespaces">
            <summary>
            Gets a collection of namespaces used by the code.
            </summary>
            <returns>Collection of namespaces</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.DoClassSpecificMethods(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Produces code for class specific methods
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.DoFieldsRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Fields Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.DoPropertiesRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Properties Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.DoToStringArrayMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            The do to string array method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.DoDoXmlElementMethod(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generates the DoXmlElement method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.GetConstructorParameterType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type to be used for a parameter in the constructor
            </summary>
            <param name="propertyInfo">
            the property
            </param>
            <returns>
            the constructor parameter type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.GetPropertyType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type for a property
            </summary>
            <param name="pi">
            The property to generate a type for
            </param>
            <returns>
            .NET data type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.GetValueForToStringArray(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the value of the property when converting to a string array.
            </summary>
            <param name="pi">
            property information
            </param>
            <returns>
            the value of the property when converting to a string array
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.OnDoClassSpecificProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Does any class specific properties. For example the count property on the difference class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.OnDoCompareToProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.Boolean)">
            <summary>
            Generates the code for comparing properties in the CompareTo method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="properties">
            The properties to generate code for
            </param>
            <param name="baseClassProperties">
            Properties in the base class, if any
            </param>
            <param name="checkResultDeclared">
            Whether the check result variable has been declared yet
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.OnDoFieldItem(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the field code for a property member
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate a field for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.SearchFilter.OnDoPropertyMutator(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the setter for the property
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate the setter for
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.UnitTestBase">
            <summary>
            Base class for generating unit tests
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestBase.Generate(System.String,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Entry point for generating the code
            </summary>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="classRemarks">
            Remarks for the class
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
            <returns>
            C# code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestBase.DoPropertiesRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generate the unit test code for the property region
            </summary>
            <param name="sb"></param>
            <param name="properties"></param>
            <param name="baseClassProperties"></param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestBase.DoConstructorMethod(System.Text.StringBuilder,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            The do constructor method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestBase.DoConstructorWithParameters(System.Text.StringBuilder,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generate the unit test code for the constructor that takes parameters
            </summary>
            <param name="sb">string build to append the code to</param>
            <param name="className">name of the class</param>
            <param name="properties">collection of properties</param>
            <param name="baseClassName">name of the base class</param>
            <param name="baseClassProperties">collection of base class properties</param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestBase.GetClassSuffix">
            <summary>
                Gets the class suffix
            </summary>
            <returns>
                the class suffix
            </returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Helper.UnitTestBase.ClassTypeName">
            <summary>
            Gets the type of class being produced (i.e. info, difference, view filter, search filter)
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.UnitTestInformation">
            <summary>
            Unit Test Generator for an Information Class
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestInformation.DoConstructorWithParameters(System.Text.StringBuilder,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Generate the unit test code for the constructor that takes parameters
            </summary>
            <param name="sb">string build to append the code to</param>
            <param name="className">name of the class</param>
            <param name="properties">collection of properties</param>
            <param name="baseClassName">name of the base class</param>
            <param name="baseClassProperties">collection of base class properties</param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.UnitTestInformation.GetClassSuffix">
            <summary>
                Gets the class suffix
            </summary>
            <returns>
                the class suffix
            </returns>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Helper.ViewFilter">
            <summary>
            Helper for generating a view filter class
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Helper.ViewFilter"/> class. 
            Constructor
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.GetClassSuffix">
            <summary>
            Gets the class suffix
            </summary>
            <returns>the class suffix</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.GetUsingNamespaces">
            <summary>
            Gets a collection of namespaces used by the code.
            </summary>
            <returns>Collection of namespaces</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.DoClassSpecificMethods(System.Text.StringBuilder,System.String,System.String,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Produces code for class specific methods
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="mainNamespaceName">
            The main namespace
            </param>
            <param name="subNamespace">
            The sub namespace, if any
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.DoConstructorMethod(System.Text.StringBuilder,System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.String,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            The do constructor method.
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="className">
            The class name
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassName">
            The name of the base class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.DoFieldsRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Fields Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.DoGetRowDataColumn(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the code for a column of the datarow
            </summary>
            <param name="sb">
            string builder to append to
            </param>
            <param name="pi">
            property information
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.DoPropertiesRegion(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Builds the Properties Region
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.GetConstructorParameterType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type to be used for a parameter in the constructor
            </summary>
            <param name="propertyInfo">
            the property
            </param>
            <returns>
            the constructor parameter type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.GetPropertyType(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the type for a property
            </summary>
            <param name="pi">
            The property to generate a type for
            </param>
            <returns>
            .NET data type
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.GetValueForToStringArray(Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Gets the value of the property when converting to a string array.
            </summary>
            <param name="pi">
            property information
            </param>
            <returns>
            the value of the property when converting to a string array
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.OnDoClassSpecificProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[])">
            <summary>
            Does any class specific properties. For example the count property on the difference class
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="properties">
            The collection of properties for the class
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.OnDoCompareToProperties(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],Dhgms.Nucleotide.Model.Info.PropertyInfo.Base[],System.Boolean)">
            <summary>
            Generates the code for comparing properties in the CompareTo method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="properties">
            The property to generate code for
            </param>
            <param name="baseClassProperties">
            Properties in the base class, if any
            </param>
            <param name="checkResultDeclared">
            Whether the check result variable has been declared yet
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.OnDoFieldItem(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the field code for a property member
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate a field for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.OnDoPropertyMutator(System.Text.StringBuilder,Dhgms.Nucleotide.Model.Info.PropertyInfo.Base)">
            <summary>
            Generates the mutator for the property
            </summary>
            <param name="sb">
            The String Builder to add the code to
            </param>
            <param name="pi">
            The property to generate the mutator for
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Helper.ViewFilter.DoGetSelectedColumnNamesMethod(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base},System.Collections.Generic.ICollection{Dhgms.Nucleotide.Model.Info.PropertyInfo.Base})">
            <summary>
            Generates the GetDifferences method
            </summary>
            <param name="sb">
            StringBuilder to add the code to
            </param>
            <param name="properties">
            Properties of the info class
            </param>
            <param name="baseClassProperties">
            The properties of the base class
            </param>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters">
            <summary>
            Represents the parameters for generating an data manager classes
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters">
            <summary>
            Interface for the class generation parameters.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.MainNamespaceName">
            <summary>
            Gets the main namespace.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.SubNamespace">
            <summary>
            Gets the sub namespace, if any.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.ClassName">
            <summary>
            Gets the name of the information class.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.Properties">
            <summary>
            Gets the collection of properties for the class.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.BaseClassProperties">
            <summary>
            Gets the collection of properties for the inherited base class, if any.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.CompanyName">
            <summary>
            Gets the company name.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.CopyrightBanner">
            <summary>
            Gets the copyright banner.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.CopyrightStartYear">
            <summary>
            Gets the copyright start year.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.Interface.IClassGenerationParameters.BaseClassName">
            <summary>
            Gets name of the base information class.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.MainNamespaceName">
            <summary>
            Gets the main namespace.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.SubNamespace">
            <summary>
            Gets the sub namespace, if any
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.ClassName">
            <summary>
            Gets name of the information class.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.ClassRemarks">
            <summary>
            Gets name of the information class.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.Properties">
            <summary>
            Gets the collection of properties for the class.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.BaseClassProperties">
            <summary>
            Gets the collection of properties for the inherited base class, if any.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.CompanyName">
            <summary>
            Gets the company name.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.CopyrightBanner">
            <summary>
            Gets the copyright banner.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.CopyrightStartYear">
            <summary>
            Gets the copyright start year.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ClassGenerationParameters.BaseClassName">
            <summary>
            Gets name of the base information class.
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.CollectionType">
            <summary>
            The type of collection the property uses, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.CollectionType.None">
            <summary>
            A collection isn't used
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.CollectionType.GenericList">
            <summary>
            A generic list is used
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.CollectionType.GenericLinkedList">
            <summary>
            A generic linked list is used
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.CollectionType.Array">
            <summary>
            An array is used
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.ConfigurationProperty">
            <summary>
            Information about a configuration property
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.ConfigurationProperty.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.ConfigurationProperty"/> class.
            </summary>
            <param name="name">
            Name of the configuration property
            </param>
            <param name="description">
            Description of the property
            </param>
            <param name="dataType">
            The data type.
            </param>
            <param name="isRequired">
            The is required.
            </param>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ConfigurationProperty.DataType">
            <summary>
            Gets or sets the .NET data type of the property
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ConfigurationProperty.Description">
            <summary>
            Gets or sets the Description of the property
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ConfigurationProperty.IsRequired">
            <summary>
            Gets or sets a value indicating whether the property is required to be configured
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ConfigurationProperty.Name">
            <summary>
            Gets or sets the Name of the configuration property
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base">
            <summary>
            base class for property information types. used for defining properties
            in information, search filter and view filter classes
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.dataType">
            <summary>
            The data type for the property.
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.keywords">
            <summary>
            List of .NET keywords
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.defaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.description">
            <summary>
            Description of the property
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base"/> class. 
            Constructor
            </summary>
            <param name="collection">
            Whether the property represents a collection
            </param>
            <param name="name">
            Name of the property
            </param>
            <param name="description">
            Description of the property
            </param>
            <param name="optional">
            Whether the property is optional (i.e. nullable)
            </param>
            <param name="netDataType">
            The .NET data type
            </param>
            <param name="searchFilterType">
            The Search Filter type
            </param>
            <param name="sqlDataReaderType">
            The SQL DataReader type
            </param>
            <param name="requiresSqlMapping">
            Whether the type needs mapping in order to be used with SQL
            </param>
            <param name="defaultValue">
            The default value of the type
            </param>
            <param name="nullableType">
            Whether the .NET data type is nullable
            </param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="xmlIsCdataElement">
            The xml element produced is a CDATA Element.
            </param>
            <param name="dataType">
            The data Type.
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.GetCSharpCompareCode(System.Boolean)">
            <summary>
            Gets the C# for carrying out a compare.
            </summary>
            <param name="checkResultDeclared">
            The check Result Declared.
            </param>
            <returns>
            C# for carrying out a compare
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.GetCSharpDataTypeDeclaration">
            <summary>
            Gets the C# for the data type declaration
            </summary>
            <returns>
            C# for the data type declaration
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.GetMutator">
            <summary>
            Gets the setter code for a property
            </summary>
            <returns>
            the setter code for a property
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.GetHashcodeOperation">
            <summary>
            Gets the logic for checking the hash code
            </summary>
            <returns>
            logic for checking the hash code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns>
            Data annotation code
            </returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.XmlIsCdataElement">
            <summary>
            Gets or sets a value indicating whether the xml element produced is a CDATA Element.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.Collection">
            <summary>
            Gets or sets whether the property represents a collection
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.DefaultValue">
            <summary>
            Gets or sets the default value for the type
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.Description">
            <summary>
            Gets or sets the description of the property. Appears in the generated comment.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.GenerateAutoProperty">
            <summary>
            Gets a value indicating whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.DisposableType">
            <summary>
            Gets a value indicating whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.Name">
            <summary>
            Gets or sets the name of the property
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.NetDataType">
            <summary>
            Gets or sets the .NET data type
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.NullableType">
            <summary>
            Gets or sets a value indicating whether .NET data type is nullable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.Optional">
            <summary>
            Gets or sets a value indicating whether the property is optional. i.e. nullable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.RequiresSqlMapping">
            <summary>
            Gets or sets a value indicating whether the type needs mapping to be used with SQL
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.SearchFilterType">
            <summary>
            Gets or sets the search filter type
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.SqlDataReaderType">
            <summary>
            Gets or sets the SQL DataReader Type
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.IsKey">
            <summary>
            Gets or sets a value indicating whether the property is the primary key
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.AlternativeDatabaseColumnName">
            <summary>
            Gets or sets the alternative database column name.
            Used where the database naming convention doesn't match the .NET naming convention
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Base.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean">
            <summary>
            Property Information for the Boolean Data Type
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean"/> class. 
            Constructor
            </summary>
            <param name="collection">
            Wether the field is a collection
            </param>
            <param name="name">
            Name of the field
            </param>
            <param name="description">
            Description for the field, used for commenting
            </param>
            <param name="optional">
            Whether the field is optionable \ nullable
            </param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrBoolean.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime">
            <summary>
            Property Information for ClrDateTime
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.minimumValue">
            <summary>
            The minimum value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.maximumValue">
            <summary>
            The maximum value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDateTime.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid">
            <summary>
            Property Information for a Guid
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString"/> class. 
            Constructor
            </summary>
            <param name="collection">
            Wether the field is a collection
            </param>
            <param name="name">
            Name of the field
            </param>
            <param name="description">
            Description for the field, used for commenting
            </param>
            <param name="optional">
            Whether the field is optionable \ nullable
            </param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrGuid.RandomUnitTestValue">
            <summary>
            Gets the random unit test value.
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte">
            <summary>
            Property Information for ClrByte
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Byte},System.Nullable{System.Byte},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrByte.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar">
            <summary>
            Property Information for ClrChar
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Char},System.Nullable{System.Char},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrChar.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal">
            <summary>
            Property Information for ClrDecimal
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDecimal.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble">
            <summary>
            Property Information for ClrDouble
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrDouble.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle">
            <summary>
            Property Information for ClrSingle
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Single},System.Nullable{System.Single},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrSingle.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16">
            <summary>
            Property Information for Integer16
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Int16},System.Nullable{System.Int16},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer16.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32">
            <summary>
            Property Information for Integer32
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer32.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64">
            <summary>
            Property Information for Integer64
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.Integer64.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8">
            <summary>
            Property Information for UnsignedInteger8
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Byte},System.Nullable{System.Byte},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger8.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16">
            <summary>
            Property Information for UnsignedInteger16
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.UInt16},System.Nullable{System.UInt16},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger16.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32">
            <summary>
            Property Information for UnsignedInteger32
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger32.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64">
            <summary>
            Property Information for UnsignedInteger64
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.minimumValue">
            <summary>
            The minimum allowed value, if any
            </summary>
        </member>
        <member name="F:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.maximumValue">
            <summary>
            The maximum allowed value, if any
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64"/> class. 
            </summary>
            <param name="collection">Wether the field is a collection</param>
            <param name="name">Name of the field</param>
            <param name="description">Description for the field, used for commenting</param>
            <param name="optional">Whether the field is optionable \ nullable</param>
            <param name="minimumValue">The minimum acceptable value for this property</param>
            <param name="maximumValue">The maximum acceptable value for this property</param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>C# code</returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.UnsignedInteger64.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString">
            <summary>
            Property Information for a String
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.#ctor(Dhgms.Nucleotide.Model.Info.CollectionType,System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString"/> class. 
            Constructor
            </summary>
            <param name="collection">
            Wether the field is a collection
            </param>
            <param name="name">
            Name of the field
            </param>
            <param name="description">
            Description for the field, used for commenting
            </param>
            <param name="optional">
            Whether the field is optionable \ nullable
            </param>
            <param name="minimumLength">
            The minimum acceptable length for a string
            </param>
            <param name="maximumLength">
            The maximum acceptable length for a string
            </param>
            <param name="isKey">
            Whether the property is the primary key
            </param>
            <param name="xmlIsCdataElement">
            The xml element produced is a CDATA Element.
            </param>
            <param name="alternativeDatabaseColumnName">
            Name of the database column name, if it's different from the .NET property name.
            </param>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.GetCSharpCompareCode(System.Boolean)">
            <summary>
            Gets the C# for carrying out a compare.
            </summary>
            <param name="checkResultDeclared">
            The check Result Declared.
            </param>
            <returns>
            C# for carrying out a compare
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.GetMutator">
            <summary>
            Gets the mutator code for a poperty
            </summary>
            <returns>
            C# code
            </returns>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.GetDataAnnotations">
            <summary>
            Produces the data annotations specific to the property
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.GenerateAutoProperty">
            <summary>
            Whether to generate an auto property, or a property that uses a field
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.MaximumLength">
            <summary>
            Gets or sets the maximum length of a string
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.MinimumLength">
            <summary>
            Gets or sets the maximum length of a string
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.RandomUnitTestValue">
            <summary>
            Gets a random value for use in a unit test.
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.ToStringArrayCode">
            <summary>
            Gets the code used for outputting a value as part of a string array
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.PropertyInfo.ClrString.DisposableType">
            <summary>
            Whether the type is disposable
            </summary>
        </member>
        <member name="T:Dhgms.Nucleotide.Model.Info.ProviderProxy">
            <summary>
            Provider Proxy Information Class
            </summary>
        </member>
        <member name="M:Dhgms.Nucleotide.Model.Info.ProviderProxy.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dhgms.Nucleotide.Model.Info.ProviderProxy"/> class. 
            Constructor
            </summary>
            <param name="name">
            Name of the provider proxy class
            </param>
            <param name="infoClass">
            The information class the provider proxy relates to
            </param>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ProviderProxy.InfoClass">
            <summary>
            Gets or sets The information class the provider proxy relates to
            </summary>
        </member>
        <member name="P:Dhgms.Nucleotide.Model.Info.ProviderProxy.Name">
            <summary>
            Gets or sets Name of the provider proxy class
            </summary>
        </member>
    </members>
</doc>
